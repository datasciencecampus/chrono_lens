language: python

matrix:
  include:
    # Use the built in venv for linux builds
    - os: linux
      sudo: required
      python: "3.8.6"
      dist: xenial

install:
  - python3 --version
  - python3 -m pip install -U pip

script:
  # NOTE
  # venv doesn't quite work - neewd to keep "activating" the next venv rather than deactivate first...

  #
  # --------------- localhost tests ---------------
  #
  - echo 'Testing localhost chrono_lens' && echo -en 'travis_fold:start:testing_localhost_chrono_lens\\r'
  - python3 -m venv localhost-venv
  - source localhost-venv/bin/activate

  # command to install dependencies
  - pip install --use-feature=2020-resolver --quiet -r requirements-localhost.txt
  # includes extra 'test' specific dependencies
  - pip3 install --use-feature=2020-resolver --quiet -r tests/requirements.txt
  # for codecov support
  - pip3 install --use-feature=2020-resolver --quiet pytest==4.3.1 pytest-cov==2.9.0
  # to report installed packages
  - pip3 freeze
  # command to run tests
  - PYTHONPATH=. pytest --cov-config .coveragerc --cov=./ tests/
  - echo -en 'travis_fold:end:testing_localhost_chrono_lens\\r'


  #
  # --------------- gcloud chrono_lens tests ---------------
  #
  - echo 'Testing gcloud chrono_lens' && echo -en 'travis_fold:start:testing_gcloud_chrono_lens\\r'

  - python3 -m venv gcloud-venv
  - source gcloud-venv/bin/activate

  - which python3
  - which pip3
  - pip3 -V

  # command to install dependencies
  - pip3 install --use-feature=2020-resolver --quiet -r requirements-gcloud.txt
  # includes extra 'test' specific dependencies
  - pip3 install --use-feature=2020-resolver --quiet -r tests/requirements.txt
  - pip3 install --use-feature=2020-resolver --quiet -r tests/chrono_lens/gcloud/requirements.txt
  # for codecov support
  - pip3 install --use-feature=2020-resolver --quiet pytest==4.3.1 pytest-cov==2.9.0
  # to report installed packages
  - pip3 freeze
  # Pretend we're running on GCP
  - GCP_PROJECT="Travis" BUILD_ID="Travis" PYTHONPATH=. pytest --cov-config .coveragerc --cov=./ tests/
  - echo -en 'travis_fold:end:testing_gcloud_chrono_lens\\r'


  #
  # --------------- gcloud cloud function tests ---------------
  #

  - cd cloud/functions

  # Find all subfolders with src, as these are the folders with GCP function code and create ci/cd triggers
  - |
    for repo_dir in **/src/
    do
      FUNCTION_NAME=${repo_dir%/*/} # get only base dir name e.g. distribute_json_sources/src/ -> distribute_json_sources
      echo "Testing cloud function <${FUNCTION_NAME}> locally" && echo -en "travis_fold:start:testing_${FUNCTION_NAME}\\\\r"
      echo "Testing cloud function <${FUNCTION_NAME}> locally"
      echo
      python3 -m venv ${FUNCTION_NAME}-venv
      source ${FUNCTION_NAME}-venv/bin/activate
      cd ${FUNCTION_NAME}
      echo "Copying root 'chrono_lens' folder as subdir to 'src' to enable local reuse of shared folder"
      cp -r ../../../chrono_lens src/
      pip3 install --use-feature=2020-resolver --quiet pytest==4.3.1 pytest-cov==2.9.0
      pip3 install --use-feature=2020-resolver --quiet -r src/requirements.txt
      if [ -f "tests/requirements.txt" ]; then pip3 install --use-feature=2020-resolver --quiet -r tests/requirements.txt; fi
      cd src
      echo "GCP_PROJECT='Travis' BUILD_ID='Travis' python -m pytest -v ../tests"
      GCP_PROJECT="Travis" BUILD_ID="Travis" python -m pytest -v ../tests
      cd ../..
      echo -en "travis_fold:end:testing_${FUNCTION_NAME}\\\\r"
    done

after_success:
  - bash <(curl -s https://codecov.io/bash)




  [0K[32;1mThe command "echo -en 'travis_fold:end:testing_localhost_chrono_lens\\r'" exited with 0.[0m
  travis_time:start:12cdbe88
  [0K$ echo 'Testing gcloud chrono_lens' && echo -en 'travis_fold:start:testing_gcloud_chrono_lens\\r'
  Testing gcloud chrono_lens
  travis_fold:start:testing_gcloud_chrono_lens\rtravis_time:end:12cdbe88:start=1636064932851179522,finish=1636064932853873091,duration=2693569,event=script
  [0K[32;1mThe command "echo 'Testing gcloud chrono_lens' && echo -en 'travis_fold:start:testing_gcloud_chrono_lens\\r'" exited with 0


  Testing cloud function <bigquery_write> locally
  travis_fold:start:testing_bigquery_write\rTesting cloud function <bigquery_write> locally


  00000000  74 72 61 76 69 73 5f 66  6f 6c 64 3a 73 74 61 72  |travis_fold:star|
  00000010  74 3a 77 6f 72 6b 65 72  5f 69 6e 66 6f 0d 1b 5b  |t:worker_info..[|
  00000020  30 4b 1b 5b 33 33 3b 31  6d 57 6f 72 6b 65 72 20  |0K.[33;1mWorker |

  000072b0  20 65 63 68 6f 20 2d 65  6e 20 22 74 72 61 76 69  | echo -en "travi|
  000072c0  73 5f 66 6f 6c 64 3a 73  74 61 72 74 3a 74 65 73  |s_fold:start:tes|
  000072d0  74 69 6e 67 5f 6c 6f 63  61 6c 68 6f 73 74 5f 63  |ting_localhost_c|
  000072e0  68 72 6f 6e 6f 5f 6c 65  6e 73 5c 5c 72 22 0d 0a  |hrono_lens\\r"..|
  000072f0  74 72 61 76 69 73 5f 66  6f 6c 64 3a 73 74 61 72  |travis_fold:star|
  00007300  74 3a 74 65 73 74 69 6e  67 5f 6c 6f 63 61 6c 68  |t:testing_localh|
  00007310  6f 73 74 5f 63 68 72 6f  6e 6f 5f 6c 65 6e 73 0d  |ost_chrono_lens.|
  00007320  74 72 61 76 69 73 5f 74  69 6d 65 3a 65 6e 64 3a  |travis_time:end:|
  00007330  30 32 39 39 39 36 30 31  3a 73 74 61 72 74 3d 31  |02999601:start=1|
  00007340  36 33 36 30 35 34 39 38  32 37 32 39 33 34 34 30  |6360549827293440|
